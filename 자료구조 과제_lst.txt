---자료구조 과제---
* HW5 - 그래프의 자료구조 이해와 활용
 - 구현해야 할 것
  - 최소 길이 스패닝 트리를 찾는 Prim 알고리즘
  - 최소 길이 스패닝 트리를 찾는 Krunskul 알고리즘
  - BFS, DFS 알고리즘
  - Connected component를 찾는 알고리즘
 - 주요사항
  -최소 길이 스패닝 트리의 탐색
   - 스패닝 트리인가를 판단하는 함수가 포함
   - 자료구조의 문제점과 개선사항
   - '선택된 노드와 경로', '최소 경로', '노드와 엣지의 수'를 출력
  - 그래프 탐색 알고리즘
   - 스패닝 트리인가를 판단하는 함수가 포함
   - '선택된 노드와 경로의 수', '노드와 엣지의 수' 출력
  - Connected Component의 탐색
   - 전체 노드의 수는 알고 있다고 가정
   - 찾아진 Connected Component 안의 노드 인덱스를 출력
  cf. 다양한 테스트 결과에 대한 비교
  cf. 가중치는 임의 설정 ok
  cf. 메모리에서 그래프의 자료구조를 정의해야함

* HW6 - 탐색트리, 정렬 알고리즘과 계산시간 비교
 - 구현해야할 것
  - Heap Sort 알고리즘
  - Quick Sort 알고리즘
  - Merge Sort 알고리즘
 - 주요사항
  - 데이터의 크기는 10,000~1,000,000의 범위에서 선택
  - 입력데이터는 random 함수를 사용하여 10개의 데이터 집합으로 구성
  - 데이터 크기 별 약 5개 이상의 입력데이터에 대해 실행시간을 측정
  - 배열의 크기에 대한 평균 실행시간의 그래프 출력
  cf. 자료구조 선택에 따른 알고리즘 설계의 장단점 비교
  cf. 힙 정렬, 퀵 정렬, 합병 정렬을 구현할 때 사용한 자료구조의 적절성을 보고서에 기술
   cf. c언어의 배열 또는 기본 자료구조를 변형한 자료구조 만을 사용하여 구현해야 함.
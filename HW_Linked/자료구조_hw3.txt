[목적]
1. 두 다항식을 입력받아 가감을 수행하는 프로그램
2. 다항식의 입력형태가 있어야 하며 다항식의 표현 방법을 두 가지 이상 설계
  -> 각 자료구조에 따른 다항식의 덧셈을 테스트
  -> 배열과, 연결리스트를 활용
3. 각 가감은 함수로 제작해야 함
  -> cal.h / cal.c의 존재

cf. 5개 이상의 다항식에 대한 테스트 제공
cf. 각 테스트 다항식은 적어도 5개 이상의 항으로 구성
cf. 다항식의 표현에서 제안한 자료구조의 비교 ( 배열 vs 연결리스트 )
cf. 설계된 프로그램을 다항식의 승제(곱셈, 나눗셈) 연산으로 확장할 수 있는가에 대한 토의
------------------------------------------------------------------------------------------------------------
[수행방법]
1. 배열을 이용하여 다항식만들기
  -> 이때 동적할당으로 만들어야함  ( array 함수 재활용 / 배열의 크기는 가장 큰 차수 + 1 )
2. 링크드리스트를 이용하여 다항식만들기
  -> 강의교안에 있는 거 활용
3. 배열을 이용한 다항식에서 가감연산 진행 
 -> 이때 - 연산은 덧셈연산으로 하되 뒤에 입력된 배열값 전체에 -1을 곱해서 처리하는 것도 가능할까?
4. 링크드리스트를 이용한 다항식에서 가감연산 진행
 -> 이때 - 연산은 덧셈연산으로 하되 뒤에 입력된 리스트값 전체에 -1을 곱해서 처리하는 것이 가능할까?
5. 각각 테스트 진행
  -> 이때 5개 이상의 항으로 된 다항식을 넣어 5번 이상 테스트 수행
6. 보고서 작성
  - 작성사항
    1) 배열과 링크드리스트 중 다항식을 표기하는 상황에서 어느것이 더 효율적(시간적, 공간적)인가 
      - 실행시간 측정으로 다항식의 가감 연산 시에 시간복잡도 측정
      - sizeof로 각각의 다항식을 표기하기 위해 메모리 얼마나 쓰는지 확인
    2) 각각의 다항식 가감연산이 승제연산으로 확장되는가에 대한 이야기
  - 테스트케이스
       (1) 잘 돌아가는지 가벼운 테스트
       (2) 항이 많은 다항식
       (3) 희소다항식 <- 차수가 높은 항들 사이에 많은 빈 항이 있는 경우
       (4) 음수와 큰 계수가 포함된 다항식
       (5) 뺄셈 연산 
김민지
김상현
